l_1 = [1, 2, 3, 4, 5]
l_2 = [7, 8, 9, 10]
l_3 = [11, 12, 13, 14]
a = 3
print(f"Cписок целых чисел: {l_1}")


# ==================================================================
# === Функция, вычисляющая произведение элементов списка целых======
# ==================================================================
def multiplication(l_1):
    v = 1
    for i in l_1:
        if i != 0:
            v *= i
        else:
            v == 0
            print("Произведение элементов списка целых равняется нулю.")
            break
    return f"Произведение элементов списка целых: {v}"


# ==================================================================
# ============ Функция для нахождения минимума в списке целых ======
# ==================================================================
def minimum(l_1):
    return f"Минимум в списке: {min(l_1)}"


# ==================================================================
# === Функция для нахождения количества простых чисел в списке =====
# ==================================================================
def prime(l_1):
    count = 0
    for i in l_1:
        if all(i % j != 0 for j in range(2, i)):
            count += 1
    return f"Kоличество простых чисел в списке целых: {count}"


# ==================================================================
# == Функция, удаляющая из списка целых некоторое заданное число ==
# ==================================================================
def dell_n(l_1, l_2):
    count_d = 1
    for i in l_2:
        if i in l_1:
            l_1.remove(i)
            count_d += 1
    return f"Количество удаленных элементов: {count_d}"


# ==================================================================
# ==================== Объединение списков =========================
# ==================================================================
def all_list(l_1, l_3):
    return f"Cписок, содержащий элементы обоих списков: {l_1 + l_3}"


# ==================================================================
# ==== Функция, высчитывающая степень каждого элемента списка ======
# ==================================================================
def p(l_1, a):
    new_lst = []
    for i in l_1:
        new_lst.append(i ** a)
    return f"Новый список, где каждый элемент находится в степени {a}: {new_lst}"


print(multiplication(l_1))
print(minimum(l_1))
print(prime(l_1))
print(dell_n(l_1, l_2))
print(all_list(l_1, l_3))
print(p(l_1, a))

# Вывод:
# Cписок целых чисел: [1, 2, 3, 4, 5]
# Произведение элементов списка целых: 120
# Минимум в списке: 1
# Kоличество простых чисел в списке целых: 4
# Количество удаленных элементов: 1
# Cписок, содержащий элементы обоих списков: [1, 2, 3, 4, 5, 11, 12, 13, 14]
# Новый список, где каждый элемент находится в степени 3: [1, 8, 27, 64, 125]
